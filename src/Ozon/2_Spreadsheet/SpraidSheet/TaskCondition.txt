Задана прямоугольная таблица n на m из чисел. 

Требуется обработать k запросов:
	примените стабильную сортировку по неубыванию к столбцу i.

Требуется вывести таблицу после обработки всех запросов.


В данной задаче можно было сдать решение в лоб:

Первым делом считаем таблицу — будем хранить ее как массив A, состоящий 
из массивов строк таблицы. Затем будем по порядку считывать запросы. 
Для каждого запроса (отсортировать столбец col) нам нужно применить стабильную 
сортировку к массиву A с компаратором, сравнивающим в A_i и A_j элемент 
с индексом col, то есть нам просто нужно использовать компаратор A_i[col] < A_j[col].

Самое главное в этой задаче — придумать и написать правильно компаратор, а также знать 
стабильную сортировку из стандартной библиотеки или уметь писать ее самому.

Примеры стабильной сортировки в языках программирования
OrderBy в C#, sort() (начиная с Swift 5), sortedWith в Kotlin.

Время работы и память
В данной задаче проходили решения с любой разумной асимптотикой, но 
например решение описанное выше работает за O(t \cdot k \cdot m \cdot n \cdot \log{n}) .

Дополнительной памяти требуется константное количество.