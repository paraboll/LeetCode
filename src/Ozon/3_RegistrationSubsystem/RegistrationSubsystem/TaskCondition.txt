Разбор задачи «Подсистема регистрации»
На вход подаются n логинов, для каждого логина вам нужно сказать, можно ли его зарегистрировать. 
Логин должен соответствовать следующим правилам:

	- Логин — это последовательность из латинских букв в любом регистре,
		цифр и символов «_» или «-» (подчеркивание и дефис).
	- Логин не должен начинаться с дефиса.
	- Логин должен иметь длину от 2 до 24 символов.
	- Логины, которые отличаются только регистром, считаются одинаковыми.

Решение:

Решение данной задачи состоит из двух основных идей:

Первая часть решения — проверка логина на первые три правила, это можно 
сделать либо напрямую проверить каждое из условий без использования
регулярных выражений, либо с помощью регулярных выражений.

Регулярное выражение, рещающее задачу:

[0-9a-zA-Z_][0-9a-zA-Z_-]{1, 23}

Вторая часть решения — проверка логина, на то что раньше его еще не было. 
Для этого нам нужно привести логин в общий вид (например в нижний регистр), 
а затем использовать структуру, которая умеет быстро добавлять
элемент и проверять элемент на наличие в множестве.

Подходящие структуры в разных языках
Set в C#, Set в Kotlin, Set в Swift.

Время работы и память
Асимптотика такого решения O(logins_{sum} \cdot \log{(logins_{sum})}), 
дополнительной памяти требуется линейное количество.